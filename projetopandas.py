# -*- coding: utf-8 -*-
"""ProjetoPandas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hYuTilbsBzLlIhw7BTipnyPjsoQbyv-b

**Importando dados**
"""

import pandas as pd

url = 'https://raw.githubusercontent.com/alura-cursos/pandas-conhecendo-a-biblioteca/main/base-de-dados/aluguel.csv'
pd.read_csv(url)

pd.read_csv(url, sep=';')

dados = pd.read_csv(url, sep=';')
dados

dados.head(10)

dados.tail()

type(dados)

dados.shape

dados.columns

dados.info()

dados['Tipo']

dados[['Quartos', 'Valor']]

"""**Qual valor medio de aluguel por tipo de imovel?**"""

dados.head()

dados['Valor'].mean()

dados.groupby('Tipo').mean(numeric_only=True)

dados.groupby('Tipo')['Valor'].mean()

dados.groupby('Tipo')[['Valor']].mean().sort_values('Valor')

df_preco_tipo = dados.groupby('Tipo')[['Valor']].mean().sort_values('Valor')

df_preco_tipo.plot(kind='barh', figsize=(14,10), color = 'purple');

"""**Removendo imoveis comerciais**"""

dados.Tipo.unique()

imoveis_comerciais = ['Conjunto Comercial/Sala',
                      'Prédio Inteiro', 'Loja/Salão',
                      'Galpão/Deposito/Armazém',
                      'Casa Comercial', 'Terreno Padrão',
                      'Loja Shopping/ Ct Comercial',
                      'Box/Garagem', 'Chácara',
                      'Loteamento/Condomínio', 'Sítio',
                      'Pousada/Chalé', 'Hotel', 'Indústria']

dados.query('@imoveis_comerciais in Tipo')

dados.query('@imoveis_comerciais not in Tipo')

df = dados.query('@imoveis_comerciais not in Tipo')
df.head()

df.Tipo.unique()

df_preco_tipo = df.groupby('Tipo')[['Valor']].mean().sort_values('Valor')
df_preco_tipo.plot(kind='barh', figsize=(14,10), color = 'purple');



"""**Qual percentual de cada tipo de imovel?**"""

df.Tipo.unique()

df.Tipo.value_counts()

df.Tipo.value_counts(normalize=True)

df.Tipo.value_counts(normalize=True).to_frame().sort_values('Tipo')

df_perc_tipo = df.Tipo.value_counts(normalize=True).to_frame().sort_values('Tipo')

df_perc_tipo.plot(kind='bar', figsize=(8,6), color = 'yellow',
                  xlabel = 'Tipos', ylabel = 'Percentual');

"""**Selecionando apenas imoveis do tipo 'Apartamento'**"""

df.query('Tipo == "Apartamento"')

df_apto = df.query('Tipo == "Apartamento"')

df_apto.head()

df_apto['Quartos'].mean()

len(df_apto['Bairro'].unique())

df_apto['Bairro'].nunique()

df_apto.groupby('Bairro')[['Valor']].mean().sort_values('Valor')

df_bairros = df_apto.groupby('Bairro')[['Valor']].mean().sort_values('Valor').head()
df_bairros.plot(kind='barh', figsize=(8,6), color='pink');

df.isnull()

"""**Identificando dados nulos**"""

df = df_apto

df.isnull()

df.isnull().sum()

df.fillna(0)

df = df.fillna(0)

df.isnull().sum()

"""**Removendo registros inconsistentes**"""

df.query('Valor == 0' and 'Condominio == 0')

df.query('Valor == 0' and 'Condominio == 0').index

reg_remov = df.query('Valor == 0' and 'Condominio == 0').index

df.drop(reg_remov, axis=0, inplace=True)

df.query('Valor == 0' or 'Condominio == 0')

df.query('Valor == 0' or 'Condominio == 0').index

reg_remov = df.query('Valor == 0' or 'Condominio == 0').index

df.drop(reg_remov, axis=0, inplace=True)

df.query('Valor == 0' or 'Condominio == 0')

df.query('Valor == 0' and 'Condominio == 0')

"""**Aplicando filtros**"""

df.head()

df.Tipo.unique()

df.drop('Tipo', axis=1, inplace=True)

df.head()

"""**Aplicando filtros**"""

df['Quartos'] == 1

selecao1 = df['Quartos'] == 1
df[selecao1]

selecao2 = df['Valor'] < 1200
df[selecao2]

selecao_final = (selecao1) & (selecao2)
df[selecao_final]

df1 = df[selecao_final]

selecao = (df['Quartos'] >= 2) & (df['Valor'] < 3000) & (df['Area'] < 70)
df[selecao]

df2 = df[selecao]

df.to_csv('dados_apartamentos.csv')

pd.read_csv('dados_apartamentos.csv')

df.to_csv('dados_apartamentos.csv', index=False)

pd.read_csv('dados_apartamentos.csv')

df.to_csv('dados_apartamentos.csv', index=False, sep=';')

pd.read_csv('dados_apartamentos.csv', sep=';')